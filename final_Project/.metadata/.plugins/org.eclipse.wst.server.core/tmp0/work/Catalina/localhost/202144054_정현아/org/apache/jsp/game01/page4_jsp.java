/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-12-08 09:52:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.game01;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class page4_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>game01-page4</title>\r\n");
      out.write("</head>\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<body class=\"d-flex h-100 text-center text-bg-dark\">\r\n");
      out.write("	<div class=\"cover-container d-flex w-100 h-100 p-3 mx-auto flex-column\">\r\n");
      out.write("  		<header>\r\n");
      out.write("    		<p align=\"left\"><a href=\"../mainView.jsp\"><img src=\"../img/title.png\" width=\"150\" height=\"55\"></img></a></p>\r\n");
      out.write("  		</header>\r\n");
      out.write("  		\r\n");
      out.write("  		<form action=\"../GameServlet\" method=\"post\">\r\n");
      out.write("		<main class=\"px-3\">\r\n");
      out.write("    		<p>\r\n");
      out.write("    			책상에는 모니터와 거울 그리고 몇개의 공책이 놓여져 있다. <br>\r\n");
      out.write("    			공책은 일기로 보인다. 내 일기일까, 죽은 저 사람의 일기일까... <br><br>\r\n");
      out.write("    			\r\n");
      out.write("    			오늘도 바쁘게 살았다. 시험기간 아니면 연락도 오지 않는 동기들과 술을 마시고 내 길이 맞는지 의심이 드는 전공 시험도 끝났다. <br>\r\n");
      out.write("    			어떻게 여기까지 오게 되었을까... 어떤 삶을 살고 싶은 건지, 내가 누구인지도 모르겠다. <br>\r\n");
      out.write("    			내일은 다르게 살아야지, 내년에는 제대로 살아야지 식의 다짐도 이젠 지겹다. <br><br>\r\n");
      out.write("    			\r\n");
      out.write("    			내가 쓴 일기였다. 나를 드러내는게 서툴듯 잔뜩 연필에 힘을 주고 삐뚤빼뚤 쓴 글씨는 나를 닮았다. <br>\r\n");
      out.write("    			공책 옆에 놓여진 손거울으로 눈길이 향했다. <br><br>\r\n");
      out.write("    			\r\n");
      out.write("    			\"어..?\" <br><br>\r\n");
      out.write("    			\r\n");
      out.write("    			이상하다, 거울을 통해 보이는 이 얼굴은 분명.. <br>\r\n");
      out.write("    			저 사람의 얼굴이다. <br><br>\r\n");
      out.write("    			\r\n");
      out.write("    			차가운 바닥에 평온한 얼굴로 죽어있는 저 사람의 얼굴이다. <br>\r\n");
      out.write("    			혼란스럽다. 어떻게 된 일인지 모르겠다. <br>\r\n");
      out.write("    			이곳을 벗어나야 한다. <br><br>\r\n");
      out.write("    			\r\n");
      out.write("    			컴퓨터의 전원을 켰다. 암호가 필요하다. <br>\r\n");
      out.write("    			\r\n");
      out.write("    			<img src=\"../img/game01_p4-computer.png\" width=\"400\" height=\"400\"></img>\r\n");
      out.write(" 	   		</p>\r\n");
      out.write(" 	   		<br>\r\n");
      out.write("    		<div align=\"center\">\r\n");
      out.write("    				정답 : <input type=\"text\" name=\"p4_correctAnswer\">  &nbsp;&nbsp;&nbsp;\r\n");
      out.write("    				<input type=\"submit\" style=\"width:60px; height:35px;\" name=\"btn_p4\" value=\"제출\">\r\n");
      out.write("    		</div>\r\n");
      out.write("  		</main>\r\n");
      out.write("  		</form>\r\n");
      out.write("\r\n");
      out.write(" 		<div class=\"b-example-divider\"></div>\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("  			<footer class=\"d-flex flex-wrap justify-content-between align-items-center py-3 my-4 border-top\">\r\n");
      out.write("    			<div class=\"col-md-4 d-flex align-items-center\">\r\n");
      out.write("     				<a href=\"/\" class=\"mb-3 me-2 mb-md-0 text-muted text-decoration-none lh-1\"></a>\r\n");
      out.write("     				<span class=\"mb-3 mb-md-0 text-muted\">Copylight &copy; Holomaking &nbsp; All Rights Reserved.</span>\r\n");
      out.write("    			</div>\r\n");
      out.write("  			</footer>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
